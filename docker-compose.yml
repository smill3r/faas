version: "3.8"

services:
  nats:
    image: nats:latest
    ports:
      - "4222:4222" # Client connections
      - "8222:8222" # Monitoring (optional)
    env_file:
      - .env
    environment:
      - NATS_MONITOR_PORT=8222
    volumes:
      - nats_data:/data
    command: --js --sd /data
    networks:
      apisix:

  etcd:
    image: bitnami/etcd:latest
    env_file:
      - .env
    environment:
      ETCD_ENABLE_V2: "true"
      ALLOW_NONE_AUTHENTICATION: "yes"
      ETCD_ADVERTISE_CLIENT_URLS: "http://0.0.0.0:2379"
      ETCD_LISTEN_CLIENT_URLS: "http://0.0.0.0:2379"
    ports:
      - "2379:2379/tcp"
    networks:
      apisix:
    volumes:
      - ./etcd-data:/bitnami/etcd/data

  apisix:
    image: custom-apisix:latest
    volumes:
      - ./apisix/conf/config.yaml:/usr/local/apisix/conf/config.yaml:ro
      - ./apisix/conf/adc.yaml:/usr/local/apisix/conf/adc.yaml:ro
      - ./apisix/conf/adc-ssl.yaml:/usr/local/apisix/conf/adc-ssl.yaml:ro
      - ./apisix/conf/entrypoint.sh:/usr/local/apisix/conf/entrypoint.sh:ro
    build:
      context: ./apisix
      dockerfile: Dockerfile
      args:
        APISIX_ADMIN_API_HOST: ${APISIX_ADMIN_API_HOST}
        APISIX_ADMIN_API_PASSWORD: ${APISIX_ADMIN_API_PASSWORD}
        SERVER_CERT: ${SERVER_CERT}
        SERVER_KEY: ${SERVER_KEY}
        DOMAIN_NAME: ${DOMAIN_NAME}
    env_file:
      - .env
    environment:
      APISIX_ENABLE_ADMIN: "true" # Enable Admin API
      APISIX_ETCD_HOST: "http://etcd:2379"
    ports:
      - "9443:9443/tcp"
      - "9180:9180/tcp"
      - "9080:9080/tcp"
      - "9091:9091/tcp"
      - "9092:9092/tcp"
    networks:
      apisix:
    depends_on:
      - etcd

  api-server-1:
    container_name: api-server-1
    build:
      context: ./api
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      PORT: "3000"
      ID: "1"
    ports:
      - 3001:3000
    volumes:
      - ./api:/usr/src/app # Mount the api folder to the container’s workdir
      - /var/run/docker.sock:/var/run/docker.sock # Mount Docker socket
    networks:
      apisix:
    depends_on:
      - mongodb

  api-server-2:
    container_name: api-server-2
    build:
      context: ./api
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      PORT: "3000"
      ID: "2"
    ports:
      - 3002:3000
    volumes:
      - ./api:/usr/src/app # Mount the api folder to the container’s workdir
      - /var/run/docker.sock:/var/run/docker.sock # Mount Docker socket
    networks:
      apisix:
    depends_on:
      - mongodb

  mongodb:
    container_name: mongodb
    image: mongo:7.0.0
    env_file:
      - .env
    environment:
      MONGO_INITDB_DATABASE: "${MONGO_PATH}"
      MONGO_INITDB_ROOT_USERNAME: "${MONGO_USER}"
      MONGO_INITDB_ROOT_PASSWORD: "${MONGO_PASSWORD}"
    ports:
      - "27017:27017"
    volumes:
      - db:/data/db
    networks:
      apisix:

networks:
  apisix:
    driver: bridge
volumes:
  nats_data:
  db:
