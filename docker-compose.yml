version: "3.8"

services:
  nats:
    image: nats:latest
    ports:
      - "4222:4222" # Client connections
      - "8222:8222" # Monitoring (optional)
    environment:
      - NATS_MONITOR_PORT=8222
    volumes:
      - nats_data:/data
    command: --js --sd /data
    networks:
      apisix:

  etcd:
    image: bitnami/etcd:latest
    restart: always
    env_file:
      - .env
    environment:
      ETCD_ENABLE_V2: 'true'
      ALLOW_NONE_AUTHENTICATION: 'yes'
      ETCD_ADVERTISE_CLIENT_URLS: 'http://0.0.0.0:2379'
      ETCD_LISTEN_CLIENT_URLS: 'http://0.0.0.0:2379'
    ports:
      - "2379:2379/tcp"
    networks:
      apisix:
    volumes:
      - ./etcd-data:/bitnami/etcd/data

  apisix:
    image: custom-apisix:latest
    restart: always
    volumes:
      - ./apisix/conf/config.yaml:/usr/local/apisix/conf/config.yaml:ro
      - ./apisix/conf/adc.yaml:/usr/local/apisix/conf/adc.yaml:ro
      - ./apisix/conf/adc-ssl.yaml:/usr/local/apisix/conf/adc-ssl.yaml:ro
      - ./apisix/conf/entrypoint.sh:/usr/local/apisix/conf/entrypoint.sh:ro
    build:
      context: ./apisix
      dockerfile: Dockerfile
      args:
        APISIX_ADMIN_API_HOST: ${APISIX_ADMIN_API_HOST}
        APISIX_ADMIN_API_PASSWORD: ${APISIX_ADMIN_API_PASSWORD}
    user: root
    env_file:
      - .env
    environment:
      APISIX_ENABLE_ADMIN: 'true' # Enable Admin API
      APISIX_ETCD_HOST: 'http://etcd:2379'
      APISIX_ADMIN_API_HOST: '${APISIX_ADMIN_API_HOST}'
      APISIX_ADMIN_API_PASSWORD: '${APISIX_ADMIN_API_PASSWORD}' # Secure Admin API access
      DOMAIN_NAME: '${DOMAIN_NAME}'
      SERVER_CERT: '${SERVER_CERT}'
      SERVER_KEY: '${SERVER_KEY}'
    ports:
      - "9180:9180/tcp"
      - "9080:9080/tcp"
      - "9091:9091/tcp"
      - "9443:9443/tcp"
      - "9092:9092/tcp"
    networks:
      apisix:
    depends_on:
      - etcd

  api-server-1:
    container_name: api-server-1
    build:
      context: ./api
      dockerfile: Dockerfile.dev
    environment:
      PORT: '3000'
      NATS_URL: nats://nats:4222
      NATS_USER: myuser
      NATS_PASS: mypassword
      ID: '1'
      NODE_ENV: 'development'
      MONGO_HOST: 'mongodb'
      MONGO_PORT: '27017'
      MONGO_PATH: '${MONGO_PATH}'
      MONGO_USER: '${MONGO_USER}'
      MONGO_PASSWORD: '${MONGO_PASSWORD}'
      APISIX_ADMIN_API_HOST: '${APISIX_ADMIN_API_HOST}'
      APISIX_ADMIN_API_PASSWORD: '${APISIX_ADMIN_API_PASSWORD}'
    ports:
      - 3001:3000
    volumes:
      - ./api:/usr/src/app         # Mount the api folder to the container’s workdir
      - /var/run/docker.sock:/var/run/docker.sock  # Mount Docker socket
    networks:
      apisix:
    depends_on:
      - mongodb

  api-server-2:
    container_name: api-server-2
    build:
      context: ./api
      dockerfile: Dockerfile.dev
    environment:
      PORT: '3000'
      NATS_URL: nats://nats:4222
      NATS_USER: myuser
      NATS_PASS: mypassword
      ID: '2'
      NODE_ENV: 'development'
      MONGO_HOST: 'mongodb'
      MONGO_PORT: '27017'
      MONGO_PATH: '${MONGO_PATH}'
      MONGO_USER: '${MONGO_USER}'
      MONGO_PASSWORD: '${MONGO_PASSWORD}'
      APISIX_ADMIN_API_HOST: '${APISIX_ADMIN_API_HOST}'
      APISIX_ADMIN_API_PASSWORD: '${APISIX_ADMIN_API_PASSWORD}'
    ports:
      - 3002:3000
    volumes:
      - ./api:/usr/src/app         # Mount the api folder to the container’s workdir
      - /var/run/docker.sock:/var/run/docker.sock  # Mount Docker socket
    networks:
      apisix:
    depends_on:
      - mongodb

networks:
  faas-network:
    driver: bridge
volumes:
  nats_data:
  db: